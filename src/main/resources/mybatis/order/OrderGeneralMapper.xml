<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.faxintong.iruyi.dao.general.OrderGeneralMapper" >
    <insert id="insertOrder" useGeneratedKeys="true" keyProperty="order.id" parameterType="com.faxintong.iruyi.model.mybatis.vo.OrderVo" >
        insert into `order`
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="order.type != null" >
                `type`,
            </if>
            <if test="order.title != null" >
                title,
            </if>
            <if test="order.lawyerId != null" >
                lawyer_id,
            </if>
            <if test="order.lawyerName != null" >
                lawyer_name,
            </if>
            <if test="order.cityId != null">
                city_id,
            </if>
            <if test="order.cityName != null">
                city_name,
            </if>
            <if test="order.content != null" >
                content,
            </if>
            <if test="order.price != null" >
                price,
            </if>
            <if test="order.deadDate != null" >
                deadline_date,
            </if>
            <if test="order.keyWords != null" >
                keywords,
            </if>
            create_date,
            update_date
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="order.type != null" >
                #{order.type,jdbcType=TINYINT},
            </if>
            <if test="order.title != null" >
                #{order.title,jdbcType=VARCHAR},
            </if>
            <if test="order.lawyerId != null" >
                #{order.lawyerId,jdbcType=BIGINT},
            </if>
            <if test="order.lawyerName != null" >
                #{order.lawyerName,jdbcType=VARCHAR},
            </if>
            <if test="order.cityId != null">
                #{order.cityId,jdbcType=BIGINT},
            </if>
            <if test="order.cityName != null">
                #{order.cityName,jdbcType=VARCHAR},
            </if>
            <if test="order.content != null" >
                #{order.content,jdbcType=VARCHAR},
            </if>
            <if test="order.price != null" >
                #{order.price,jdbcType=DOUBLE},
            </if>
            <if test="order.deadDate != null" >
                #{order.deadDate,jdbcType=TIMESTAMP},
            </if>
            <if test="order.keyWords != null" >
                #{order.keyWords,jdbcType=VARCHAR},
            </if>
            now(),
            now()
        </trim>
    </insert>
    <select id="selectOrderVo" parameterType="map" resultType="com.faxintong.iruyi.model.mybatis.vo.OrderVo">
        select o.id,o.type,o.title,o.content,o.city_name cityName,o.deadline_date deadDate,o.keywords keyWords,o.price,l.photo_url as lawyerPhotoUrl,
        l.name as lawyerName,l.id as lawyerId
        ,(select count(*) from order_receive orc where orc.order_id = o.id) interestCount
        <if test="lawyerId != null">
        ,(select count(*) from order_receive orc1 where orc1.order_id = o.id and orc1.lawyer_id = #{lawyerId}) isInterest
        </if>
        from `order` o, lawyer l
        where o.lawyer_id=l.id and (not EXISTS (select 1 from order_blacklist ob where ob.order_id = o.id)
            and not EXISTS (select 1 from order_whitelist ow where ow.order_id = o.id))
        <if test="lawyerId != null">
            or (o.id in (select ow1.order_id from order_whitelist ow1 where ow1.lawyer_id = #{lawyerId} )
                and not exists (select ob1.order_id from order_blacklist ob1 where ob1.lawyer_id = #{lawyerId} and ob1.order_id = o.id)
            )
        </if>
        order by o.create_date
        limit #{startCount},#{pageSize}
    </select>

    <select id="searchOrderVo" parameterType="map" resultType="com.faxintong.iruyi.model.mybatis.vo.OrderVo">
        select o.id,o.type,o.title,o.content,o.city_name cityName,o.deadline_date deadDate,o.keywords keyWords,o.price,l.photo_url as lawyerPhotoUrl,
        l.name as lawyerName,l.id as lawyerId
        ,(select count(*) from order_receive orc where orc.order_id = o.id) interestCount
        <if test="lawyerId != null">
            ,(select count(*) from order_receive orc1 where orc1.order_id = o.id and orc1.lawyer_id = #{lawyerId}) isInterest
        </if>
        from `order` o, lawyer l
        where o.lawyer_id=l.id
        <if test="title != null">
            and o.title like CONCAT('%',#{title},'%' )
        </if>
        <if test="content != null">
            and o.content like  CONCAT('%',#{content},'%' )
        </if>
        and (not EXISTS (select 1 from order_blacklist ob where ob.order_id = o.id)
        and not EXISTS (select 1 from order_whitelist ow where ow.order_id = o.id))
        <if test="lawyerId != null">
            or (o.id in (select ow1.order_id from order_whitelist ow1 where ow1.lawyer_id = #{lawyerId} )
            and not exists (select ob1.order_id from order_blacklist ob1 where ob1.lawyer_id = #{lawyerId} and ob1.order_id = o.id)
            )
        </if>
        order by o.create_date
        limit #{startCount},#{pageSize}
    </select>

    <resultMap id="OrderReceiveVo" type="com.faxintong.iruyi.model.mybatis.vo.OrderReceiveVo" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
        <result column="lawyerId" property="lawyerId" jdbcType="BIGINT" />
        <result column="lawyerName" property="lawyerName" jdbcType="VARCHAR" />
        <result column="photoUrl" property="photoUrl" jdbcType="VARCHAR" />
        <association property="orderVo" column="order_id" javaType="com.faxintong.iruyi.model.mybatis.vo.OrderVo" select="selectOrderVoByOrderReceiveVo" />
    </resultMap>
    <select id="selectMyOrderReceiveVo" parameterType="map" resultMap="OrderReceiveVo">
        select ore.id,ore.content,ore.create_date createDate
        ,l.id lawyerId,l.`name` lawyerName,l.photo_url photoUrl
        ,ore.order_id
        from order_receive ore
        inner join lawyer l on ore.lawyer_id = l.id
        where ore.lawyer_id = #{lawyerId}
        limit #{startCount},#{pageSize}
    </select>
    <select id="selectOrderVoByOrderReceiveVo" resultType="com.faxintong.iruyi.model.mybatis.vo.OrderVo">
        select o.id,o.title,o.content
        from `order` o
        where o.id = #{order_id}
    </select>

    <select id="selectReceiveMyOrder" parameterType="map" resultMap="OrderReceiveVo">
        select ore.id,ore.content,ore.create_date createDate
        ,l.id lawyerId,l.`name` lawyerName,l.photo_url photoUrl
        ,ore.order_id
        from order_receive ore
        inner join `order` o on o.id = ore.order_id
        inner join lawyer l on ore.lawyer_id = l.id
        where o.lawyer_id = #{lawyerId}
        limit #{startCount},#{pageSize}
    </select>

    <insert id="insertOrderBlackOrWhite" parameterType="map">
        insert into
        <if test="type !=null and type == 0"> order_whitelist </if>
        <if test="type !=null and type == 1"> order_blacklist </if>
        (order_id,lawyer_id)
        values
        <trim suffix="" suffixOverrides=",">
            <foreach collection="lawyerIds" item="item" separator="," >
                (#{orderId},#{item})
            </foreach>
        </trim>
    </insert>
</mapper>